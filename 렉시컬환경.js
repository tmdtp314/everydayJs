

/* 1_1 렉시컬 환경 컴포넌트 */
``` 
       
    - 함수와 변수 식별자 해결을 위해 위해 존재
    - 함수 초기화 단계에서 함수/변수를 {name:value}형태로 저장
    - 함수 밖의 함수/변수를 참조 할 수 있는 환경을 설정
       (내가 속한 Object의 환경을 설정한다.)
       (함수 밖의 함수와 변수를 사용할 수 있게 됨)
```

/* 1_2 언제 생성되는가? */
   ```
       function, with문, try-catch문 만날 때 렉시컬 환경 생성된다.
   ```

/* 1_3 구성은? */
   ```
      - 환경 레코드 : 함수안의 함수와 변수를 기록
      - 외부 렉시컬 환경 참조 : 함수 밖의 변수와 함수 등을 function Object의 [[Scope]]를 설정
      => 함수 안과 밖의 함수와 변수를 사용할 수 있게 됨(묶음)
   ```

/* 2_1 변수 환경 컴포넌트 */
```
     - 렉시컬 환경 컴포넌트와 같게 설정된다.  
     - 환경 레코드 : 함수안의 함수와 변수를 기록
     - 외부 렉시컬 환경 참조 : 함수 밖의 변수와 함수 등을 function Object의 [[Scope]]를 설정
     
```
/* 2_2 함수 코드가 실행되면 */
```
    실행 결과를 렉시컬 환경 컴포넌트에 설정
    undefined -> 실제 값 할당
    초깃값을 복원할 때 사용하기 위해 사용됨 (with문에서 사용한다)

```


