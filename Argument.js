```
 함수가 호출되면 함수 안에서 argument Object를 만든다. 
 그리고 이곳에 파라미터를 {key:value} 형태로 저장한다.
 
 그런데 key가 없는 경우 
 파라미터 수만큼 0부터 인덱스를 부여하고
 이를 key로 사용한다. 
  
 그리고 파라미터로 받은 값을 value에 설정한다.
 ex { 0:param1, 
      1:param2 }

 이를 Array-like 라고 부른다. 
   - key값이 0부터 1씩 증가
   - length 프로퍼티가 꼭 있어야 한다. (for문을 쓸 수 있다. ) 

   ```



/* 엔진의 파라미터 처리 */
var get = function(one){
    return one;
};
get(77,100); // length = 2

```
 get() 함수를 호출하면서 77과 100을 파라미터 값으로 넘겨준다.
 넘겨받은 값을 파라미터의 이름에 설정(맵핑) 시킨다.
 스코프 개념으로 정의
   - 정적 환경의 선언적 환경 레코드에 설정
   - {name:value} --> {one : 77}   -->  {파라미터이름:파라미터로 받은 값}
   - 선언적 환경 레코드에 가서 식별자 해결을 한다. (77)

 Argument Object를 생성한다. 
  - 넘겨받은 파라미터 값을 Argument Object의 length 프로퍼티에 설정
  - 넘겨받은 파라미터 수만큼 반복하면서
     { 0:77,
       1:100 } 식으로 파라미터 값 설정 


  이는 함수의 초기화 단계에서 실행된다. ( 초기화 - undefined ..)


   ```